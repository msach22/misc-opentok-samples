/*
 * Variables
 */

@header-height: 40px;

@footer-height: 80px;
@footer-color: #34495e;

@sidebar-width: 335px;
@course-header-height: 60px;

@bottom-bar-height: 32px;
@bottom-bar-color: #363636;

.user > ul {
  .list-horizontal-right;
}

ot-publisher,
ot-subscriber,
ot-layout {
    display: block;
    overflow: hidden;
}
ot-layout {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: @bottom-bar-height;
}

.classroom {
  position: relative;
}

.course-title {
  width: @sidebar-width;
  text-align: center;
  line-height: @course-header-height;
  height: @course-header-height;
  background-color: #1abc9c;
  float: left;
  color: #f7f5f2;
}

.course-info {
  & > div {
    /* TODO: 3 fluid columns */
    display: inline-block;
    margin-left: 40px;
  }
  height: @course-header-height;
  line-height: @course-header-height;
  margin-left: @sidebar-width;
  background-color: #ecf0f1;
}

.bottomBar {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: @bottom-bar-height;
  background-color: @bottom-bar-color;

  button {
    .size(32px, 32px);
    background-color: @bottom-bar-color;
    border: 1px solid #3f3f3f;
  }

  .actions {
    float: left;
  }
  .settings {
    float: right;
  }

  [name=whiteboard] {
    background-image: url('/images/whiteboard.png');
  }
  [name=discussion] {
    background-image: url('/images/discussion.png');
  }
  [locked=false] {
    background-image: url('/images/discussion-unlocked.png');
  }
  [name=mute] {
    background-image: url('/images/mute.png');
  }
}
ot-whiteboard {
  background-color: #DCD9CD;
}

.clearfix() {
  zoom: 1;
	&:after {
    display: block;
    visibility: hidden;
    height: 0;
    clear: both;
    content: ".";
	}
}

// Reset the box model measurements.
.reset-box-model(){
	margin: 0;
	padding: 0;
	border: 0;
}

.float-left() {
	.float(left);
}

.float-right() {
	.float(right);
}

.float(@direction: left) {
	display: inline;
	float: @direction;
}

// Turn off the bullet for an element of a list
.list-item-no-bullet() {
	list-style-image : none;
	list-style-type  : none;
	margin-left      : 0px;
}

// Can be mixed into any selector that target a ul or ol that is meant to have a horizontal layout.

.list-container-horizontal(){
	.reset-box-model();
	.clearfix();
}

// Can be mixed into any li selector that is meant to participate in a horizontal layout.
//
// :last-child is not fully supported
// see http://www.quirksmode.org/css/contents.html#t29 for the support matrix
//
// IE8 ignores rules that are included on the same line as :last-child
// see http://www.richardscarrott.co.uk/posts/view/ie8-last-child-bug for details
//
// Setting `@padding` to `false` disables the padding between list elements

.list-item-horizontal-left(@padding: 4px) {
	.list-item-no-bullet;
	white-space: nowrap;
	.float-left;

	padding-left: @padding;
	padding-right: @padding;


	&:first-child, &.first {
		padding-left: 0;
	}

	&:last-child, &.last {
		padding-right: 0;
	}
}

.list-item-horizontal-right(@padding: 4px) {
	.list-item-no-bullet;
	white-space: nowrap;
	.float-right;

	padding-left: @padding;
	padding-right: @padding;

	&:first-child, &.first {
		padding-right: 0;
	}

	&:last-child, &.last {
		padding-left: 0;
	}
}

// A list(ol,ul) that is layed out such that the elements are floated left and won't wrap.
// This is not an inline list.
//
// Setting `@padding` to `false` disables the padding between list elements

.list-horizontal-left(@padding: 4px) {
	.list-container-horizontal;
	li {
		.list-item-horizontal-left(@padding);
	}
}

.list-horizontal-right(@padding: 4px) {
	.list-container-horizontal;
	li {
		.list-item-horizontal-right(@padding);
	}
}
